import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function resetDatabase() {
  console.log("üîÑ R√©initialisation compl√®te de la base de donn√©es...\n");

  if (!process.argv.includes("--force")) {
    console.log(
      "‚ö†Ô∏è  ATTENTION: Ceci va supprimer TOUTES les donn√©es de la base de donn√©es!"
    );
    console.log("‚ö†Ô∏è  Pour confirmer, relancez le script avec --force:");
    console.log("npm run reset-db:force");
    return;
  }

  try {
    console.log("üóëÔ∏è  Suppression de toutes les donn√©es...");

    // Supprimer dans l'ordre pour respecter les contraintes de cl√©s √©trang√®res

    // 1. Tables d√©pendantes d'abord
    await prisma.integrationLog.deleteMany({});
    console.log("‚úÖ Logs d'int√©gration supprim√©s");

    await prisma.integration.deleteMany({});
    console.log("‚úÖ Int√©grations supprim√©es");

    await prisma.pricingOptionValue.deleteMany({});
    console.log("‚úÖ Valeurs des options de prix supprim√©es");

    await prisma.pricingOption.deleteMany({});
    console.log("‚úÖ Options de prix supprim√©es");

    await prisma.booking.deleteMany({});
    console.log("‚úÖ R√©servations supprim√©es");

    await prisma.room.deleteMany({});
    console.log("‚úÖ Places supprim√©es");

    await prisma.userEstablishment.deleteMany({});
    console.log("‚úÖ Relations utilisateur-√©tablissement supprim√©es");

    await prisma.establishment.deleteMany({});
    console.log("‚úÖ √âtablissements supprim√©s");

    // 2. Tables d'authentification
    await prisma.session.deleteMany({});
    console.log("‚úÖ Sessions supprim√©es");

    await prisma.account.deleteMany({});
    console.log("‚úÖ Comptes OAuth supprim√©s");

    await prisma.verification.deleteMany({});
    console.log("‚úÖ Tokens de v√©rification supprim√©s");

    await prisma.user.deleteMany({});
    console.log("‚úÖ Utilisateurs supprim√©s");

    console.log("\n‚ú® Base de donn√©es r√©initialis√©e avec succ√®s!");
    console.log(
      "üéØ Vous pouvez maintenant cr√©er un nouveau compte administrateur."
    );
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©initialisation:", error);
  } finally {
    await prisma.$disconnect();
  }
}

resetDatabase();
